# Default values for dave-external.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:

  #nameOverride: ""
  fullnameOverride: "dave"

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  extraEnvVars:
    ## Default Timezone
    - name: "TZ"
      value: "Europe/Berlin"
    ## Aktive Spring Profiles der Anwendung
    - name: "SPRING_PROFILES_ACTIVE"
      value: "dev"
    ## Erhöhe Default JVM Metaspace Size (100 MB) um OutOfMemoryError - Metaspace zu verhindern
    - name: "GC_MAX_METASPACE_SIZE"
      value: "200"
    ## Java Optionen der Anwendung
    - name: "AVA_OPTS_APPEND"
      value: ""
    ## Namespace für Hazelcasst
    - name: "APP_SPRING-SESSION-HAZELCAST_NAMESPACE"
      value: "dave-external"
    ## Elasticsearch
    - name: "ELASTICSEARCH_PASSWORD"
      value: "XXXXXXXXXXXXXXXXXXXXXXXX"
    - name: "ELASTICSEARCH_USER"
      value: ""
    - name: "ELASTICSEARCH_HOST"
      value: "dave-elasticsearch"
    - name: "ELASTICSEARCH_PORT"
      value: "9200"
    - name: "ELASTICSEARCH_REINDEX"
      value: "true"
    - name: "ELASTICSEARCH_SCHEME"
      value: "http"
    ## Spring
    ## Session timout in seconds; Goal: same lifetime as SSO Session (e.g. 10 hours)
    - name: "SPRING_SESSION_TIMEOUT"
      value: "3600"

############################################################

daveBackend:

  replicaCount: 1

  image:
    repository: ghcr.io/gislab-augsburg/dave-backend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main-ls1"

  imagePullSecrets: []
  #nameOverride: "backend"
  fullnameOverride: "dave-backend"

  podAnnotations: {}

  deploymentAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
    - port: 5701
      targetPort: 5701
      protocol: TCP
      name: hazelcast

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  extraVolumeMounts:
    []
    # - name: secret-truststore
    #   readOnly: true
    #   mountPath: /mnt
  extraVolumes:
    []
    # - name: secret-truststore
    #   secret:
    #     secretName: custom-cacerts
    #     defaultMode: 420

  # can be used to add init containers
  initContainers:
    []
    # - name: my-init-container-name
    #   image: some-image:latest
    #   env:
    #     - name: AWS_DEFAULT_REGION
    #       value: "eu-central-1"
    #   volumeMounts:
    #     - name: help-zammad
    #       mountPath: /opt/zammad

  credentials:
    # secret must contain keys USER_DN and PASSWORD for ldap authentication
    existingSecret: ""

  eaiRoute:
    enabled: false
    # host: "ezldap-eai-route.example.org"
    # wildcardPolicy: "None"
    # tls:
    #   termination: "Edge"
    #   insecureEdgeTerminationPolicy: "Redirect"
    # whitelist: "10.0.0.1 10.0.0.2"

  serviceMonitor:
    enabled: false

  applicationYML:
    daveBackend:
      #ldap:
      #  url: ldap://ldap.example.org:389
      #  user-search-base: ou=users,dc=example,dc=org
      #  ou-search-base: ou=orga,dc=example,dc=org
      cors:
        enabled: false
        # allowed-origin-patterns:
        #   - https://*.example.org:[*]
        #   - http://localhost:[*]
      cache:
        enabled: false
        # disk:
        #   dir: /deployments/cache
    app:
      auth-mode: none
    # logging:
    #   level:
    #     "[de.muenchen.oss.ezldap]": DEBUG

############################################################

daveFrontend:

  replicaCount: 1

  image:
    repository: ghcr.io/gislab-augsburg/dave-frontend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main-ls1"

  imagePullSecrets: []
  nameOverride: "frontend"
  #fullnameOverride: "dave-backend"

  podAnnotations: {}

  deploymentAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  extraVolumeMounts:
    []
    # - name: secret-truststore
    #   readOnly: true
    #   mountPath: /mnt
  extraVolumes:
    []
    # - name: secret-truststore
    #   secret:
    #     secretName: custom-cacerts
    #     defaultMode: 420

  # can be used to add init containers
  initContainers:
    []
    # - name: my-init-container-name
    #   image: some-image:latest
    #   env:
    #     - name: AWS_DEFAULT_REGION
    #       value: "eu-central-1"
    #   volumeMounts:
    #     - name: help-zammad
    #       mountPath: /opt/zammad

  credentials:
    # secret must contain keys USER_DN and PASSWORD for ldap authentication
    existingSecret: ""

  eaiRoute:
    enabled: false
    # host: "ezldap-eai-route.example.org"
    # wildcardPolicy: "None"
    # tls:
    #   termination: "Edge"
    #   insecureEdgeTerminationPolicy: "Redirect"
    # whitelist: "10.0.0.1 10.0.0.2"

  serviceMonitor:
    enabled: false

  applicationYML:
    daveFrontend:
      #ldap:
      #  url: ldap://ldap.example.org:389
      #  user-search-base: ou=users,dc=example,dc=org
      #  ou-search-base: ou=orga,dc=example,dc=org
      cors:
        enabled: false
        # allowed-origin-patterns:
        #   - https://*.example.org:[*]
        #   - http://localhost:[*]
      cache:
        enabled: false
        # disk:
        #   dir: /deployments/cache
    app:
      auth-mode: none
    # logging:
    #   level:
    #     "[de.muenchen.oss.ezldap]": DEBUG

############################################################

daveAdminPortal:

  replicaCount: 1

  image:
    repository: ghcr.io/gislab-augsburg/dave-admin-portal
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main-ls1"

  imagePullSecrets: []
  nameOverride: "admin-portal"
  #fullnameOverride: "dave-backend"

  podAnnotations: {}

  deploymentAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  extraVolumeMounts:
    []
    # - name: secret-truststore
    #   readOnly: true
    #   mountPath: /mnt
  extraVolumes:
    []
    # - name: secret-truststore
    #   secret:
    #     secretName: custom-cacerts
    #     defaultMode: 420

  # can be used to add init containers
  initContainers:
    []
    # - name: my-init-container-name
    #   image: some-image:latest
    #   env:
    #     - name: AWS_DEFAULT_REGION
    #       value: "eu-central-1"
    #   volumeMounts:
    #     - name: help-zammad
    #       mountPath: /opt/zammad

  credentials:
    # secret must contain keys USER_DN and PASSWORD for ldap authentication
    existingSecret: ""

  eaiRoute:
    enabled: false
    # host: "ezldap-eai-route.example.org"
    # wildcardPolicy: "None"
    # tls:
    #   termination: "Edge"
    #   insecureEdgeTerminationPolicy: "Redirect"
    # whitelist: "10.0.0.1 10.0.0.2"

  serviceMonitor:
    enabled: false

  applicationYML:
    daveAdminPortal:
      #ldap:
      #  url: ldap://ldap.example.org:389
      #  user-search-base: ou=users,dc=example,dc=org
      #  ou-search-base: ou=orga,dc=example,dc=org
      cors:
        enabled: false
        # allowed-origin-patterns:
        #   - https://*.example.org:[*]
        #   - http://localhost:[*]
      cache:
        enabled: false
        # disk:
        #   dir: /deployments/cache
    app:
      auth-mode: none
    # logging:
    #   level:
    #     "[de.muenchen.oss.ezldap]": DEBUG

############################################################

daveSelfservicePortal:

  replicaCount: 1

  image:
    repository: ghcr.io/gislab-augsburg/dave-selfservice-portal
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main-ls1"

  imagePullSecrets: []
  nameOverride: "selfservice-portal"
  #fullnameOverride: "dave-backend"

  podAnnotations: {}

  deploymentAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  extraVolumeMounts:
    []
    # - name: secret-truststore
    #   readOnly: true
    #   mountPath: /mnt
  extraVolumes:
    []
    # - name: secret-truststore
    #   secret:
    #     secretName: custom-cacerts
    #     defaultMode: 420

  # can be used to add init containers
  initContainers:
    []
    # - name: my-init-container-name
    #   image: some-image:latest
    #   env:
    #     - name: AWS_DEFAULT_REGION
    #       value: "eu-central-1"
    #   volumeMounts:
    #     - name: help-zammad
    #       mountPath: /opt/zammad

  credentials:
    # secret must contain keys USER_DN and PASSWORD for ldap authentication
    existingSecret: ""

  eaiRoute:
    enabled: false
    # host: "ezldap-eai-route.example.org"
    # wildcardPolicy: "None"
    # tls:
    #   termination: "Edge"
    #   insecureEdgeTerminationPolicy: "Redirect"
    # whitelist: "10.0.0.1 10.0.0.2"

  serviceMonitor:
    enabled: false

  applicationYML:
    daveSelfservicePortal:
      #ldap:
      #  url: ldap://ldap.example.org:389
      #  user-search-base: ou=users,dc=example,dc=org
      #  ou-search-base: ou=orga,dc=example,dc=org
      cors:
        enabled: false
        # allowed-origin-patterns:
        #   - https://*.example.org:[*]
        #   - http://localhost:[*]
      cache:
        enabled: false
        # disk:
        #   dir: /deployments/cache
    app:
      auth-mode: none
    # logging:
    #   level:
    #     "[de.muenchen.oss.ezldap]": DEBUG

############################################################

daveEai:

  replicaCount: 1

  image:
    repository: ghcr.io/gislab-augsburg/dave-eai
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main-ls1"

  imagePullSecrets: []
  nameOverride: "eai"
  #fullnameOverride: "dave-backend"

  podAnnotations: {}

  deploymentAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  extraVolumeMounts:
    []
    # - name: secret-truststore
    #   readOnly: true
    #   mountPath: /mnt
  extraVolumes:
    []
    # - name: secret-truststore
    #   secret:
    #     secretName: custom-cacerts
    #     defaultMode: 420

  # can be used to add init containers
  initContainers:
    []
    # - name: my-init-container-name
    #   image: some-image:latest
    #   env:
    #     - name: AWS_DEFAULT_REGION
    #       value: "eu-central-1"
    #   volumeMounts:
    #     - name: help-zammad
    #       mountPath: /opt/zammad

  credentials:
    # secret must contain keys USER_DN and PASSWORD for ldap authentication
    existingSecret: ""

  eaiRoute:
    enabled: false
    # host: "ezldap-eai-route.example.org"
    # wildcardPolicy: "None"
    # tls:
    #   termination: "Edge"
    #   insecureEdgeTerminationPolicy: "Redirect"
    # whitelist: "10.0.0.1 10.0.0.2"

  serviceMonitor:
    enabled: false

  applicationYML:
    daveEai:
      #ldap:
      #  url: ldap://ldap.example.org:389
      #  user-search-base: ou=users,dc=example,dc=org
      #  ou-search-base: ou=orga,dc=example,dc=org
      cors:
        enabled: false
        # allowed-origin-patterns:
        #   - https://*.example.org:[*]
        #   - http://localhost:[*]
      cache:
        enabled: false
        # disk:
        #   dir: /deployments/cache
    app:
      auth-mode: none
    # logging:
    #   level:
    #     "[de.muenchen.oss.ezldap]": DEBUG